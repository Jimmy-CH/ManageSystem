# 定义后端 uWSGI 集群（使用 uWSGI 协议）
upstream django_backend {
    server 192.168.1.10:8000 max_fails=3 fail_timeout=30s;
    server 192.168.1.11:8001 max_fails=3 fail_timeout=30s;
    server 192.168.1.12:8002 max_fails=3 fail_timeout=30s;

    # 保持长连接（提升性能）
    keepalive 32;
}

# HTTP → 强制跳转 HTTPS
server {
    listen 80;
    server_name example.com www.example.com;
    return 301 https://$server_name$request_uri;
}

# HTTPS 主服务
server {
    listen 443 ssl http2;
    server_name example.com www.example.com;

    # SSL 证书（Let's Encrypt）
    ssl_certificate     /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    # 安全头
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security "max-age=31536000" always;

    # 静态文件：Django 静态资源（由 Nginx 直接提供）
    location /static/ {
        alias /opt/ManageSystem/server/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location /media/ {
        alias /opt/ManageSystem/server/media/;
        expires 1M;
    }

    # API 请求 → 代理到 uWSGI 集群
    location /api/ {
        uwsgi_pass django_backend;
        include uwsgi_params;

        # 可选：剥离 /api 前缀（让 Django 收到 /users/ 而非 /api/users/）
        # 如果 Django 路由已包含 /api，则删除以下两行
        uwsgi_param SCRIPT_NAME /api;
        uwsgi_modifier1 30;
    }

    # WebSocket 支持（如使用 Django Channels）
    location /ws/ {
        uwsgi_pass django_backend;
        include uwsgi_params;

        uwsgi_param SCRIPT_NAME /ws;
        uwsgi_modifier1 30;

        # WebSocket 升级头
        uwsgi_param HTTP_UPGRADE $http_upgrade;
        uwsgi_param HTTP_CONNECTION $connection;
    }

    # Vue 前端静态文件
    root /var/www/vue-project/dist;
    index index.html;

    # 前端路由 fallback（history 模式）
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 可选：禁止访问敏感文件
    location ~ /\.(env|git|ht|ini)$ {
        deny all;
    }
}
